// <auto-generated />
using System;
using MediaManager.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MediaManager.Entity.Migrations
{
    [DbContext(typeof(MediaManagerContext))]
    partial class MediaManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MediaManager.Entity.Acteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EpisodeId");

                    b.Property<int?>("FilmId");

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<string>("Prenom")
                        .IsRequired();

                    b.Property<int?>("SerieId");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.HasIndex("FilmId");

                    b.HasIndex("SerieId");

                    b.ToTable("Acteurs");
                });

            modelBuilder.Entity("MediaManager.Entity.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateSortie");

                    b.Property<int>("DureeEnMinute");

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<int>("SaisonId");

                    b.Property<string>("Synopsis");

                    b.HasKey("Id");

                    b.HasIndex("SaisonId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("MediaManager.Entity.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateSortie");

                    b.Property<int>("DureeEnMinute");

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<string>("Synopsis");

                    b.HasKey("Id");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("MediaManager.Entity.Saison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateSortie");

                    b.Property<int>("Numero");

                    b.Property<int?>("SerieId");

                    b.HasKey("Id");

                    b.HasIndex("SerieId");

                    b.ToTable("Saisons");
                });

            modelBuilder.Entity("MediaManager.Entity.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateSortie");

                    b.Property<int>("DureeEnMinute");

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<string>("Synopsis");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("MediaManager.Entity.Acteur", b =>
                {
                    b.HasOne("MediaManager.Entity.Episode")
                        .WithMany("Casting")
                        .HasForeignKey("EpisodeId");

                    b.HasOne("MediaManager.Entity.Film")
                        .WithMany("Casting")
                        .HasForeignKey("FilmId");

                    b.HasOne("MediaManager.Entity.Serie")
                        .WithMany("Casting")
                        .HasForeignKey("SerieId");
                });

            modelBuilder.Entity("MediaManager.Entity.Episode", b =>
                {
                    b.HasOne("MediaManager.Entity.Saison", "Saison")
                        .WithMany("Episodes")
                        .HasForeignKey("SaisonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MediaManager.Entity.Saison", b =>
                {
                    b.HasOne("MediaManager.Entity.Serie")
                        .WithMany("Saisons")
                        .HasForeignKey("SerieId");
                });
#pragma warning restore 612, 618
        }
    }
}
